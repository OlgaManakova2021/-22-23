Задание для студентов

Задача по парсингу файлов и сохранения записей в БД.

Основные задания:
1. Создать парсер документов с использованием регулярных выражений (или любой другой способ парсинга), чтобы можно было получать полную информацию хотя бы с 80% от всех документов;
2. В папке с данными «parsed_decisions» необходимо пропарсить каждый текстовый файл и в каждом найти:
  1. Номер решения;
  2. Дату решения;
  3. Номер дела;
  4. Место принятия решения (город, область и т.д.);
  5. Судью;
3. Использовать ООП (например, создать класс документ и в его переменные записывать нужные данные и т.д.);
4. Сделать код читабельным;
5. Создать понятную структуру проекта (делать импорты из других модулей и пакетов, сделанный проект в одном или паре файлов нельзя);

Дополнительные задания немного повышенной сложности:
1. Создать таблицу в базе данных со следующими полями:
  1. Номер решения - (тип данных) текст;
  2. Дата решения - дата; (потребуется сделать функцию для перевода найденной даты в корректную для выбранной БД)
  3. Номер дела - текст;
  4. Место принятия решения -текст;
  5. Судья - текст ;
  6. Полный текст решения - текст;
2. Для работы с БД, будь то создание, обновление или удаление использовать любую ORM (желательно SQLAlchemy. НА КРАЙНИЙ СЛУЧАЙ, если не получается ORM, можно использовать SQL-запросы);
3. Записывать полученные данные в любую БД [1] (желательно использовать Postgres, для соединения с БД рекомендую использовать PcyCopg2 или своё усмотрение);
4. Данные желательно сразу распаршивать и записывать в БД; [необяз]

Дополнительные задачи повышенной сложности (для любителей выучить что-то новое):
1. [1] Использовать БД ClickHouse (для работы с ней желательно использовать SQLAlchemy-clickhouse, идёт отдельно от SQLAlchemy); [необяз]
2. Создать микросервис для своего проекта (написать свой проект на FastAPI или Flask) и создать эндпоинты для нужных функций, через которые можно управлять проектом)
3. Написать свой парсер для поиска решений на сайте https://sudact.ru/law/apk-rf/ (парсить любые судебные решения, например одно из них https://sudact.ru/law/apk-rf/razdel-i/glava-1/statia-1/) для парсинга желательно использовать Selenium (для сёрфинга страниц) и BeautifulSoup4 (для поиска нужных данных в HTML-коде страницы). По желанию, можно использовать свой любимый способ парсинга сайтов. Полученные данные желательно сразу после распаршивания записывать в БД, на крайний случай их можно записывать в текстовые файлы, а уже потом парсить)
4. Сделать переключение страницы с решениями [не обяз, но очень желательно]

Ещё дополнительные задания высокой сложности [необяз]:
1. Обернуть сервис в Docker (создать докерфайл, докер-компоуз файл, прокинуть порты в композ файле)

Ссылки:
1. Ссылка на основной сайт
Арбитражный процессуальный кодекс Российской..
https://sudact.ru/law/apk-rf/

2. Статья, которую вам нужно будет парсить
Ст. 1 АПК РФ
https://sudact.ru/law/apk-rf/razdel-i/glava-1/statia-1/
